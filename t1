#!/usr/bin/perl -X
##Vl.started: 6:21 PM Wednesday, May 16, 2018: $ perl -c V4.pl; $ perl ./V4.pl; RO2 (elements) recovering code..
use strict;
# no strict "refs";
use warnings;
use constant REV => "1, 6:22 PM Wednesday, May 16, 2018";
my (@dxt1, @dxt2);
my (@prev_dxt1_dtcbIdx, @prev_dxt2_dtcbIdx, @prev_dxt1_iws, @prev_dxt2_iws); #Vl. prev=previous.
open my $hcfg1, '<', "./V4cfg1" or die "Can't open the file ./V4cfg1: $!";
use v5.14;
while (<$hcfg1>) {
  chomp;
  next if /^\s*$/ or /^#/;
  s/\s*#.*$// if /#/;
  s/\s+$//;
  say $_;
  my $cut1;
  if (/Socket/){
      /=\s*(.*$)/; $cut1 = $1;
	  push @dxt1, split /,\s*/, $cut1 if /dxt1/;
	  push @dxt2, split /,\s*/, $cut1 if /dxt2/;
  } elsif (/dtcbIdx(?!Alias)/) {
      /:\s*(.*$)/; $cut1 = $1;
	  push @prev_dxt1_dtcbIdx, split /\s+/, $cut1 if /dxt1/;
	  push @prev_dxt2_dtcbIdx, split /\s+/, $cut1 if /dxt2/;
  } elsif (/iws/) {
      /:\s*(.*$)/; $cut1 = $1;
	  push @prev_dxt1_iws, split /\s+/, $cut1 if /dxt1/;
	  push @prev_dxt2_iws, split /\s+/, $cut1 if /dxt2/;
  }
}
close $hcfg1;
say "dxt1: @dxt1";
say "dxt2: @dxt2";
say "prev_dxt1_dtcbIdx: @prev_dxt1_dtcbIdx";
say "prev_dxt1_dtcbIdx[3]: $prev_dxt1_dtcbIdx[3]";
say "prev_dxt2_dtcbIdx: @prev_dxt2_dtcbIdx";
say "prev_dxt1_iws: @prev_dxt1_iws";
say "prev_dxt2_iws: @prev_dxt2_iws";
my @curr_dxt1_iws = qw(TTRX-58-0 TBC-58-0 TDSC-3-0 TDSC-1-3 TBC-62-0);
say '@curr_dxt1_iws = '."@curr_dxt1_iws";
my @listCmp_result;
push @INC, "../";
require Vutils::Vutils1;
@listCmp_result = listCmp(\@curr_dxt1_iws, \@prev_dxt1_iws, "diff");
x();
say '@listCmp_result = listCmp(\@curr_dxt1_iws, \@prev_dxt1_iws, "diff");';
say "listCmp_result: @listCmp_result";

=begin comment1

https://stackoverflow.com/a/47664214/3180812
rename($file, $file.'.bak');
open(IN, '<'.$file.'.bak') or die $!;
open(OUT, '>'.$file) or die $!;
while(<IN>)
{
    $_ =~ s/blue/red/g;
    print OUT $_;
}
close(IN);
close(OUT);

=end comment1

=cut

